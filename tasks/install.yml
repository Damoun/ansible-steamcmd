---

- name: enable non-free Debian repository
  apt_repository:
    repo: deb {{ deb_mirror }} {{ ansible_distribution_release }} {{ repositories }}
    state: present
  when:
    - ansible_os_family == "Debian"
    - not steamcmd_manual
  register: update_apt

- name: enabled architecture i386
  command: dpkg --add-architecture i386
  when:
    - not steamcmd_manual
    - ansible_os_family == "Debian"
    - ansible_userspace_architecture == "x86_64"
  register: update_apt

- name: update package list
  apt:
    update_cache: yes
  when:
    - not steamcmd_manual
    - ansible_os_family == "Debian"
    - update_apt is defined
    - update_apt.changed

- debconf:
    name: steamcmd
    question: steam/question
    value: 'I AGREE'
    vtype: select
  when:
    - not steamcmd_manual
    - ansible_os_family == "Debian"

- debconf:
    name: steamcmd
    question: steam/license
    value: ''
    vtype: note
  when:
    - not steamcmd_manual
    - ansible_os_family == "Debian"

- name: create directory for SteamCMD
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  with_items:
    - "{{ steamcmd_lib_path }}"
    - "{{ steamcmd_bin_path }}"
  when:
    - steamcmd_manual

- name: install packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ steamcmd_packages }}"

- name: install packages
  package:
    name: "{{ steamcmd_package }}"
    state: present
  when:
    - not steamcmd_manual

- name: download SteamCMD for Linux
  get_url:
    url: "{{ steamcmd_download_url }}"
    dest: '/tmp/steamcmd_linux.tar.gz'
    force: yes
  when:
    - steamcmd_manual

- name: extract SteamCMD
  unarchive:
    src: '/tmp/steamcmd_linux.tar.gz'
    dest: "{{ steamcmd_lib_path }}"
    copy: no
  when:
    - steamcmd_manual

- name: setup SteamCMD bin symlink
  file:
    path: "{{ steamcmd_bin_path }}/steamcmd"
    src: "{{ steamcmd_lib_path }}/linux32/steamcmd"
    state: link
    force: yes
  when:
    - steamcmd_manual